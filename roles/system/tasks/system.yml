---

- name: Make sure docker group exists.
  ansible.builtin.group:
    name: docker
    state: present

- name: Create login user {{ username }}
  ansible.builtin.user:
    name: "{{ username }}"
    group: "{{ unixgroup }}"    # maybe first create these groups??
    groups:
      - docker
    append: true

- name: Ensure packages are installed.
  community.general.pacman:
    name: "{{ extra_packages }}"
    state: present

- name: Ensure mount points exist.
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ unixgroup }}"
    mode: "0755"
    recurse: false
  with_items:
    - "{{ mount_nas_drive }}"
    - "{{ mount_backup_drive }}"

- name: Ensure mount for BACKUP drive is correct in fstab.
  ansible.posix.mount:
    backup: true
    path: "{{ mount_backup_drive }}"
    state: present
    src: UUID={{ uuid_backup_drive }}
    fstype: btrfs
    opts: defaults,noatime,compress=lzo,space_cache=v2,nofail,x-systemd.device-timeout=5s,subvolid=5


- name: Ensure mount for NAS drive is correct in fstab.
  ansible.posix.mount:
    backup: true
    path: "{{ mount_nas_drive }}"  # remember this is hardcoded in the compose files also!
    state: mounted
    src: UUID={{ uuid_nas_drive }}
    fstype: btrfs
    opts: "defaults,noatime,compress=lzo,space_cache=v2,nofail,x-systemd.device-timeout=5s,\
          x-systemd.required-by=docker.service,x-systemd.before=docker.service,subvolid=5"

- name: Setup smartd config file.
  ansible.builtin.template:
    src: smartd.conf.j2
    dest: /etc/smartd.conf
    backup: true
    owner: root
    group: root
    mode: '644'
    validate: smartd -q onecheck -c %s
  notify: Restart smartd systemd service on configuration change.

- name: Enable smartd systemd service.
  ansible.builtin.systemd:
    name: smartd
    state: "started"
    enabled: true

- name: Place .tmux.conf
  ansible.builtin.copy:
    content: "set -g mouse on\n"
    dest: "/home/{{ username }}/.tmux.conf"
    mode: '644'
    owner: "{{ username }}"
    group: "{{ unixgroup }}"


- name: Configure mutt
  ansible.builtin.template:
    src: muttrc.j2
    dest: /root/.muttrc
    owner: root
    group: root
    mode: '600'
  notify: Send test email with mutt.


- name: Setup email for system notifications with msmtp
  ansible.builtin.template:
    src: msmtprc.j2
    dest: /root/.msmtprc
    owner: root
    group: root
    mode: '600'
  notify: Send test email with msmtp.

- name: Ensure docker service is running.
  ansible.builtin.systemd:
    name: "docker"
    state: "started"
    enabled: true

- name: Create /etc/docker directory.
  become: true
  ansible.builtin.file:
    path: /etc/docker
    state: directory

- name: Change DNS servers for docker (since otherwise downloads in containers might fail because of weird bug) https://stackoverflow.com/a/68199803
  become: true
  ansible.builtin.copy:
    content: "{ \"dns\": [\"8.8.8.8\", \"9.9.9.9\"] }"
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: "0644"
  notify: Restart docker daemon.
