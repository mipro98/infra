---

- name: Create {{ docker_data_dir }}
  ansible.builtin.file:
    path: "{{ docker_data_dir }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ unixgroup }}"
    mode: "0755"

- name: Create folders for docker-compose files.
  ansible.builtin.file:
    path: "{{ docker_compose_dir }}/{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ unixgroup }}"
    mode: "0755"
  with_items: "{{ docker_services }}"

- name: Get UID for user "{{ username }}" from shell (to be used later in compose templates).
  become: false
  ansible.builtin.shell:
    cmd: id -u
  register: username_id

- name: Get GID for group "{{ unixgroup }}" from shell (to be used later in compose templates).
  become: false
  ansible.builtin.shell:
    cmd: id -g
  register: unixgroup_id

- name: Copy compose-SERVICE.yml (docker-compose) files for the enabled services in the respective folders.
  ansible.builtin.template:
    src: "{{ item }}.yml.j2"
    dest: "{{ docker_compose_dir }}/{{ item }}/compose-{{ item }}.yml"
    owner: "{{ username }}"
    group: "{{ unixgroup }}"
    mode: '644'
  with_items: "{{ docker_services }}"

- name: Generate service-level docker-compose.yml files.
  ansible.builtin.template:
    src: service-compose.yml.j2
    dest: "{{ docker_compose_dir }}/{{ item }}/docker-compose.yml"
    owner: "{{ username }}"
    group: "{{ unixgroup }}"
    mode: '644'
  with_items: "{{ docker_services }}"

- name: Copy commons.yml into {{ docker_compose_dir }}.
  ansible.builtin.copy:
    src: commons.yml
    dest: "{{ docker_compose_dir }}/commons.yml"
    owner: "{{ username }}"
    group: "{{ unixgroup }}"
    mode: '744'

- name: Generate master docker-compose for administering all containers at once.
  ansible.builtin.template:
    src: "master-compose.yml.j2"
    dest: "{{ docker_compose_dir }}/docker-compose.yml"
    owner: "{{ username }}"
    group: "{{ unixgroup }}"
    mode: '744'

- name: include nextcloud setup tasks
  include_tasks: nextcloud.yml
  when: '"nextcloud" in docker_services'

- name: Ensure the ulogger-server repo is cloned in case ulogger is configured.
  ansible.builtin.git:
    repo: 'https://github.com/bfabiszewski/ulogger-server'
    dest: "{{ docker_compose_dir }}/ulogger/ulogger-server"
    update: false
  when: '"ulogger" in docker_services'